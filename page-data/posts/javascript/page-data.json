{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/javascript",
    "result": {"pageContext":{"currentCategory":"javascript","categories":["All","algorithm","javascript","frontend"],"edges":[{"node":{"id":"a317ea59-ee36-5043-9946-1387b8a9ff06","excerpt":"자바스크립트의 스코프(유효 범위) 다른 언어의 스코프와 구별되는 특징이 있으므로 주의해야한다. 아래 코드를 보면 마지막 줄에서 레퍼런스 에러가 발생하는 데, 이유는 가 이기 때문이다. 모든 식별자(변수 이름, 함수 이름, 클래스 이름 등)는 ****에 따라 참조할 수 있는 범위가 결정된다. 스코프 = 식별자가 유효한 범위 자바스크립트 엔진은 위의 코드를 실행하면서 선언된 두 개의 x 변수 중 어떤 것을 참조할 것인지 한다. 이때 를 고려한다. 스코프 = 식별자를 검색할 때 사용하는 규칙 📌 코드의 문맥과 환경 렉시컬 환경(lexical environment): 코드가 어디서 실행되며 주변에 어떤 코드가 있는지 코드의 문맥은 렉시컬 환경으로 이루어짐 이를 구현한 실제가 실행 컨텍스트(execution context), 모든 코드는 실행 컨텍스트에서 평가되고 실행됨 📌 식별자 변수나 함수 이름, 어떤 값을 구별하여 식별해낼 수 있는 고유한 이름을 말한다. 하나의 값이 유일한 식별자와 …","fields":{"slug":"/js-scope/"},"frontmatter":{"categories":"javascript","title":"스코프","date":"January 26, 2022"}},"next":{"fields":{"slug":"/algorithm-programmers-crossover-stepping-stone/"}},"previous":{"fields":{"slug":"/algorithm-programmers-longest-palindrome/"}}},{"node":{"id":"707b647b-2953-560f-94a7-2bc6f77d32c8","excerpt":"원시타입과 객체타입 자바스크립트 7가지 데이터 타입 숫자 문자 불리언 null undefined 심벌 객체 원시타입 primitive type 변경 불가능 원시 값을 변수에 할당하면 실제 값이 저장 원시 값이 복사되어 전달 (값에 의한 전달) 객체타입 object / reference type 변경 가능 객체를 변수에 할당하면 참조 값이 저장 참조 값이 복사되어 전달 (참조에 의한 전달) 원시 값 변경 불가능한 값 한번 생성된 원시 값은 읽기 전용 값으로서 변경할 수 없다. 변경 불가능하다는 것은 원시 값 자체를 변경할 수 없다는 것이고 변수 값을 변경할 수 없다는 것이 아니다. 변경 불가능하다는 원시 값의 특성은 데이터의 신뢰성을 보장한다. 원시값을 재할당하면 메모리 공간에 저장된 재할당 이전의 원시 값을 변경하는 것이 아니라 새로운 메모리 공간을 확보하고 재할당한 원시 값을 저장한 후에 변수가 새롭게 재할당한 원시 값을 가리키도록 한다. ⇒ 불변성: 변수에 새로운 값 할당하면 …","fields":{"slug":"/js-primitive-object/"},"frontmatter":{"categories":"javascript","title":"원시 값과 객체의 비교","date":"January 12, 2022"}},"next":{"fields":{"slug":"/algorithm-programmers-lock-and-key/"}},"previous":{"fields":{"slug":"/algorithm-programmers-change-word/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}