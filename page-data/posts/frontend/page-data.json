{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/frontend",
    "result": {"pageContext":{"currentCategory":"frontend","categories":["All","algorithm","reminiscence","javascript","frontend"],"edges":[{"node":{"id":"bdeb1e6c-8340-5fb2-ae8d-ed35e579002b","excerpt":"⤳ Flux 패턴 리덕스는 flux 패턴을 이용한 패키지이다. 🤢 Flux 배경 : 기존 MVC 모델의 한계 대규모 어플리케이션에서 일관된 데이터 관리를 하기 위해 만들어젼다. 기존에 보편적으로 사용되는 패턴은 MVC로, Model에 데이터 정의, Controller에 Model 데이터 CRUD, 변경된 데이터는 View에 출력되어 사용자에게 전달된다.  단순 MVC 패턴 이 패턴의 문제점은 어플리케이션의 규모가 커질수록 데이터 흐름이 너무 복잡해진다는 점이었다.  복잡한 MVC 패턴 MVC 패턴은 데이터 변경사항을 신속하게 전파하기가 어렵다. 모델이 늘어날수록 전파 대상도 늘어나기 때문이다.  예를 들면 하나의 게시물이 있을 때, 게시물을 삭제하면 게시물에 연관된 댓글도 삭제되어야 하고 각 유저의 댓글 카운터나 사이트 헤더에도 변경사항이 전파되어야 한다. 🤔 Flux 패턴  facebook은 이 문제를 해결하기 위해 flux 패턴을 제시했다. 양방향 데이터 흐름이 아닌 단방향으로…","fields":{"slug":"/flux/"},"frontmatter":{"categories":"frontend","title":"Flux 패턴","date":"January 13, 2022"}},"next":{"fields":{"slug":"/algorithm-programmers-change-word/"}},"previous":{"fields":{"slug":"/algorithm-programmers-search-lyrics/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}